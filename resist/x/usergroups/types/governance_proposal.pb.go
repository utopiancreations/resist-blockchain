// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: resist/usergroups/v1/governance_proposal.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// GovernanceProposal defines the GovernanceProposal message.
type GovernanceProposal struct {
	Index             string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	Title             string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description       string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Proposer          string `protobuf:"bytes,4,opt,name=proposer,proto3" json:"proposer,omitempty"`
	ProposalType      string `protobuf:"bytes,5,opt,name=proposal_type,json=proposalType,proto3" json:"proposal_type,omitempty"`
	VotingPeriodStart int64  `protobuf:"varint,6,opt,name=voting_period_start,json=votingPeriodStart,proto3" json:"voting_period_start,omitempty"`
	VotingPeriodEnd   int64  `protobuf:"varint,7,opt,name=voting_period_end,json=votingPeriodEnd,proto3" json:"voting_period_end,omitempty"`
	YesVotes          uint64 `protobuf:"varint,8,opt,name=yes_votes,json=yesVotes,proto3" json:"yes_votes,omitempty"`
	NoVotes           uint64 `protobuf:"varint,9,opt,name=no_votes,json=noVotes,proto3" json:"no_votes,omitempty"`
	AbstainVotes      uint64 `protobuf:"varint,10,opt,name=abstain_votes,json=abstainVotes,proto3" json:"abstain_votes,omitempty"`
	Status            string `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	Creator           string `protobuf:"bytes,12,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *GovernanceProposal) Reset()         { *m = GovernanceProposal{} }
func (m *GovernanceProposal) String() string { return proto.CompactTextString(m) }
func (*GovernanceProposal) ProtoMessage()    {}
func (*GovernanceProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_7bcb3055f85ca2ab, []int{0}
}
func (m *GovernanceProposal) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GovernanceProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GovernanceProposal.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GovernanceProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GovernanceProposal.Merge(m, src)
}
func (m *GovernanceProposal) XXX_Size() int {
	return m.Size()
}
func (m *GovernanceProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_GovernanceProposal.DiscardUnknown(m)
}

var xxx_messageInfo_GovernanceProposal proto.InternalMessageInfo

func (m *GovernanceProposal) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *GovernanceProposal) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GovernanceProposal) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GovernanceProposal) GetProposer() string {
	if m != nil {
		return m.Proposer
	}
	return ""
}

func (m *GovernanceProposal) GetProposalType() string {
	if m != nil {
		return m.ProposalType
	}
	return ""
}

func (m *GovernanceProposal) GetVotingPeriodStart() int64 {
	if m != nil {
		return m.VotingPeriodStart
	}
	return 0
}

func (m *GovernanceProposal) GetVotingPeriodEnd() int64 {
	if m != nil {
		return m.VotingPeriodEnd
	}
	return 0
}

func (m *GovernanceProposal) GetYesVotes() uint64 {
	if m != nil {
		return m.YesVotes
	}
	return 0
}

func (m *GovernanceProposal) GetNoVotes() uint64 {
	if m != nil {
		return m.NoVotes
	}
	return 0
}

func (m *GovernanceProposal) GetAbstainVotes() uint64 {
	if m != nil {
		return m.AbstainVotes
	}
	return 0
}

func (m *GovernanceProposal) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GovernanceProposal) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*GovernanceProposal)(nil), "resist.usergroups.v1.GovernanceProposal")
}

func init() {
	proto.RegisterFile("resist/usergroups/v1/governance_proposal.proto", fileDescriptor_7bcb3055f85ca2ab)
}

var fileDescriptor_7bcb3055f85ca2ab = []byte{
	// 348 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0xcf, 0x6a, 0xea, 0x40,
	0x14, 0xc6, 0xcd, 0xf5, 0x5f, 0x1c, 0x95, 0x8b, 0x73, 0xe5, 0x32, 0xde, 0x0b, 0x21, 0xd4, 0x8d,
	0x74, 0x11, 0x11, 0xdf, 0xa0, 0x50, 0xba, 0x15, 0x5b, 0xba, 0xe8, 0x26, 0x44, 0x73, 0x90, 0x01,
	0x99, 0x19, 0xe6, 0x1c, 0x83, 0x79, 0x89, 0xd2, 0xc7, 0xea, 0xd2, 0x65, 0x97, 0x45, 0x5f, 0xa4,
	0x64, 0x12, 0xad, 0x5d, 0x7e, 0xdf, 0xef, 0x77, 0xe0, 0xcc, 0x1c, 0x16, 0x59, 0x40, 0x89, 0x34,
	0xdd, 0x21, 0xd8, 0x8d, 0xd5, 0x3b, 0x83, 0xd3, 0x6c, 0x36, 0xdd, 0xe8, 0x0c, 0xac, 0x4a, 0xd4,
	0x1a, 0x62, 0x63, 0xb5, 0xd1, 0x98, 0x6c, 0x23, 0x63, 0x35, 0x69, 0x3e, 0x2c, 0xfd, 0xe8, 0xdb,
	0x8f, 0xb2, 0xd9, 0xcd, 0x6b, 0x9d, 0xf1, 0x87, 0xcb, 0xcc, 0xa2, 0x1a, 0xe1, 0x43, 0xd6, 0x94,
	0x2a, 0x85, 0xbd, 0xf0, 0x42, 0x6f, 0xd2, 0x59, 0x96, 0xa1, 0x68, 0x49, 0xd2, 0x16, 0xc4, 0xaf,
	0xb2, 0x75, 0x81, 0x87, 0xac, 0x9b, 0x02, 0xae, 0xad, 0x34, 0x24, 0xb5, 0x12, 0x75, 0xc7, 0xae,
	0x2b, 0xfe, 0x8f, 0xf9, 0xe5, 0x32, 0x60, 0x45, 0xc3, 0xe1, 0x4b, 0xe6, 0x63, 0xd6, 0x3f, 0x2f,
	0x1a, 0x53, 0x6e, 0x40, 0x34, 0x9d, 0xd0, 0x3b, 0x97, 0x4f, 0xb9, 0x01, 0x1e, 0xb1, 0x3f, 0x99,
	0x26, 0xa9, 0x36, 0xb1, 0x01, 0x2b, 0x75, 0x1a, 0x23, 0x25, 0x96, 0x44, 0x2b, 0xf4, 0x26, 0xf5,
	0xe5, 0xa0, 0x44, 0x0b, 0x47, 0x1e, 0x0b, 0xc0, 0x6f, 0xd9, 0xe0, 0xa7, 0x0f, 0x2a, 0x15, 0x6d,
	0x67, 0xff, 0xbe, 0xb6, 0xef, 0x55, 0xca, 0xff, 0xb3, 0x4e, 0x0e, 0x18, 0x67, 0x9a, 0x00, 0x85,
	0x1f, 0x7a, 0x93, 0xc6, 0xd2, 0xcf, 0x01, 0x9f, 0x8b, 0xcc, 0x47, 0xcc, 0x57, 0xba, 0x62, 0x1d,
	0xc7, 0xda, 0x4a, 0x97, 0x68, 0xcc, 0xfa, 0xc9, 0x0a, 0x29, 0x91, 0xaa, 0xe2, 0xcc, 0xf1, 0x5e,
	0x55, 0x96, 0xd2, 0x5f, 0xd6, 0x42, 0x4a, 0x68, 0x87, 0xa2, 0xeb, 0x9e, 0x55, 0x25, 0x2e, 0x58,
	0x7b, 0x6d, 0x21, 0x21, 0x6d, 0x45, 0xcf, 0x81, 0x73, 0xbc, 0x9b, 0xbf, 0x1f, 0x03, 0xef, 0x70,
	0x0c, 0xbc, 0xcf, 0x63, 0xe0, 0xbd, 0x9d, 0x82, 0xda, 0xe1, 0x14, 0xd4, 0x3e, 0x4e, 0x41, 0xed,
	0x65, 0x54, 0x1d, 0x7c, 0x7f, 0x7d, 0xf2, 0xe2, 0xcb, 0x70, 0xd5, 0x72, 0x27, 0x9e, 0x7f, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x8f, 0xa8, 0xdd, 0xf1, 0x14, 0x02, 0x00, 0x00,
}

func (m *GovernanceProposal) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GovernanceProposal) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GovernanceProposal) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x5a
	}
	if m.AbstainVotes != 0 {
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(m.AbstainVotes))
		i--
		dAtA[i] = 0x50
	}
	if m.NoVotes != 0 {
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(m.NoVotes))
		i--
		dAtA[i] = 0x48
	}
	if m.YesVotes != 0 {
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(m.YesVotes))
		i--
		dAtA[i] = 0x40
	}
	if m.VotingPeriodEnd != 0 {
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(m.VotingPeriodEnd))
		i--
		dAtA[i] = 0x38
	}
	if m.VotingPeriodStart != 0 {
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(m.VotingPeriodStart))
		i--
		dAtA[i] = 0x30
	}
	if len(m.ProposalType) > 0 {
		i -= len(m.ProposalType)
		copy(dAtA[i:], m.ProposalType)
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(len(m.ProposalType)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Proposer) > 0 {
		i -= len(m.Proposer)
		copy(dAtA[i:], m.Proposer)
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(len(m.Proposer)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintGovernanceProposal(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGovernanceProposal(dAtA []byte, offset int, v uint64) int {
	offset -= sovGovernanceProposal(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GovernanceProposal) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovGovernanceProposal(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovGovernanceProposal(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovGovernanceProposal(uint64(l))
	}
	l = len(m.Proposer)
	if l > 0 {
		n += 1 + l + sovGovernanceProposal(uint64(l))
	}
	l = len(m.ProposalType)
	if l > 0 {
		n += 1 + l + sovGovernanceProposal(uint64(l))
	}
	if m.VotingPeriodStart != 0 {
		n += 1 + sovGovernanceProposal(uint64(m.VotingPeriodStart))
	}
	if m.VotingPeriodEnd != 0 {
		n += 1 + sovGovernanceProposal(uint64(m.VotingPeriodEnd))
	}
	if m.YesVotes != 0 {
		n += 1 + sovGovernanceProposal(uint64(m.YesVotes))
	}
	if m.NoVotes != 0 {
		n += 1 + sovGovernanceProposal(uint64(m.NoVotes))
	}
	if m.AbstainVotes != 0 {
		n += 1 + sovGovernanceProposal(uint64(m.AbstainVotes))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovGovernanceProposal(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovGovernanceProposal(uint64(l))
	}
	return n
}

func sovGovernanceProposal(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGovernanceProposal(x uint64) (n int) {
	return sovGovernanceProposal(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GovernanceProposal) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGovernanceProposal
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GovernanceProposal: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GovernanceProposal: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proposer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProposalType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProposalType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotingPeriodStart", wireType)
			}
			m.VotingPeriodStart = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VotingPeriodStart |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotingPeriodEnd", wireType)
			}
			m.VotingPeriodEnd = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.VotingPeriodEnd |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field YesVotes", wireType)
			}
			m.YesVotes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.YesVotes |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoVotes", wireType)
			}
			m.NoVotes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NoVotes |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AbstainVotes", wireType)
			}
			m.AbstainVotes = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AbstainVotes |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGovernanceProposal(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGovernanceProposal
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGovernanceProposal(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGovernanceProposal
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGovernanceProposal
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGovernanceProposal
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGovernanceProposal
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGovernanceProposal
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGovernanceProposal        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGovernanceProposal          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGovernanceProposal = fmt.Errorf("proto: unexpected end of group")
)
