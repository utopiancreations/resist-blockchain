// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: resist/usergroups/v1/content_report.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// ContentReport defines the ContentReport message.
type ContentReport struct {
	Index             string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	PostId            uint64 `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Reporter          string `protobuf:"bytes,3,opt,name=reporter,proto3" json:"reporter,omitempty"`
	Reason            string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	Evidence          string `protobuf:"bytes,5,opt,name=evidence,proto3" json:"evidence,omitempty"`
	Status            string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CommunityResponse string `protobuf:"bytes,7,opt,name=community_response,json=communityResponse,proto3" json:"community_response,omitempty"`
	Resolution        string `protobuf:"bytes,8,opt,name=resolution,proto3" json:"resolution,omitempty"`
	Creator           string `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *ContentReport) Reset()         { *m = ContentReport{} }
func (m *ContentReport) String() string { return proto.CompactTextString(m) }
func (*ContentReport) ProtoMessage()    {}
func (*ContentReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1ee77efd75355d6, []int{0}
}
func (m *ContentReport) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContentReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContentReport.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContentReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContentReport.Merge(m, src)
}
func (m *ContentReport) XXX_Size() int {
	return m.Size()
}
func (m *ContentReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ContentReport.DiscardUnknown(m)
}

var xxx_messageInfo_ContentReport proto.InternalMessageInfo

func (m *ContentReport) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *ContentReport) GetPostId() uint64 {
	if m != nil {
		return m.PostId
	}
	return 0
}

func (m *ContentReport) GetReporter() string {
	if m != nil {
		return m.Reporter
	}
	return ""
}

func (m *ContentReport) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ContentReport) GetEvidence() string {
	if m != nil {
		return m.Evidence
	}
	return ""
}

func (m *ContentReport) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ContentReport) GetCommunityResponse() string {
	if m != nil {
		return m.CommunityResponse
	}
	return ""
}

func (m *ContentReport) GetResolution() string {
	if m != nil {
		return m.Resolution
	}
	return ""
}

func (m *ContentReport) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*ContentReport)(nil), "resist.usergroups.v1.ContentReport")
}

func init() {
	proto.RegisterFile("resist/usergroups/v1/content_report.proto", fileDescriptor_f1ee77efd75355d6)
}

var fileDescriptor_f1ee77efd75355d6 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xb1, 0x4e, 0x02, 0x41,
	0x10, 0x86, 0x39, 0x84, 0x03, 0x36, 0xb1, 0x70, 0x43, 0x74, 0xb5, 0xd8, 0x10, 0x2b, 0x2c, 0x84,
	0x10, 0xde, 0x40, 0x2b, 0xdb, 0x2b, 0x6d, 0x08, 0xde, 0x4d, 0xcc, 0x26, 0xb2, 0xb3, 0x99, 0x99,
	0x23, 0xf0, 0x14, 0xfa, 0x58, 0x96, 0x94, 0x96, 0x06, 0x5e, 0xc4, 0xb0, 0x0b, 0x48, 0xf9, 0xed,
	0xff, 0x7d, 0xd9, 0x64, 0xd4, 0x03, 0x01, 0x3b, 0x96, 0x71, 0xcd, 0x40, 0xef, 0x84, 0x75, 0xe0,
	0xf1, 0x72, 0x32, 0x2e, 0xd1, 0x0b, 0x78, 0x99, 0x11, 0x04, 0x24, 0x19, 0x05, 0x42, 0x41, 0xdd,
	0x4f, 0xea, 0xe8, 0x5f, 0x1d, 0x2d, 0x27, 0xf7, 0x9f, 0x4d, 0x75, 0xf9, 0x9c, 0xf4, 0x22, 0xda,
	0xba, 0xaf, 0xda, 0xce, 0x57, 0xb0, 0x32, 0xd9, 0x20, 0x1b, 0xf6, 0x8a, 0x04, 0xfa, 0x46, 0x75,
	0x02, 0xb2, 0xcc, 0x5c, 0x65, 0x9a, 0x83, 0x6c, 0xd8, 0x2a, 0xf2, 0x3d, 0xbe, 0x54, 0xfa, 0x4e,
	0x75, 0xd3, 0x37, 0x40, 0xe6, 0x22, 0x16, 0x27, 0xd6, 0xd7, 0x2a, 0x27, 0x98, 0x33, 0x7a, 0xd3,
	0x8a, 0xcb, 0x81, 0xf6, 0x0d, 0x2c, 0x5d, 0x05, 0xbe, 0x04, 0xd3, 0x4e, 0xcd, 0x91, 0xf7, 0x0d,
	0xcb, 0x5c, 0x6a, 0x36, 0x79, 0x6a, 0x12, 0xe9, 0x47, 0xa5, 0x4b, 0x5c, 0x2c, 0x6a, 0xef, 0x64,
	0x3d, 0x23, 0xe0, 0x80, 0x9e, 0xc1, 0x74, 0xa2, 0x73, 0x75, 0x5a, 0x8a, 0xc3, 0xa0, 0xad, 0x52,
	0x04, 0x8c, 0x1f, 0xb5, 0x38, 0xf4, 0xa6, 0x1b, 0xb5, 0xb3, 0x17, 0x6d, 0x54, 0xa7, 0x24, 0x98,
	0x0b, 0x92, 0xe9, 0xc5, 0xf1, 0x88, 0x4f, 0xd3, 0xef, 0xad, 0xcd, 0x36, 0x5b, 0x9b, 0xfd, 0x6e,
	0x6d, 0xf6, 0xb5, 0xb3, 0x8d, 0xcd, 0xce, 0x36, 0x7e, 0x76, 0xb6, 0xf1, 0x7a, 0x7b, 0x38, 0xf6,
	0xea, 0xfc, 0xdc, 0xb2, 0x0e, 0xc0, 0x6f, 0x79, 0xbc, 0xf1, 0xf4, 0x2f, 0x00, 0x00, 0xff, 0xff,
	0x36, 0xd9, 0xff, 0x84, 0x90, 0x01, 0x00, 0x00,
}

func (m *ContentReport) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContentReport) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContentReport) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Resolution) > 0 {
		i -= len(m.Resolution)
		copy(dAtA[i:], m.Resolution)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.Resolution)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.CommunityResponse) > 0 {
		i -= len(m.CommunityResponse)
		copy(dAtA[i:], m.CommunityResponse)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.CommunityResponse)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Status) > 0 {
		i -= len(m.Status)
		copy(dAtA[i:], m.Status)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.Status)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Evidence) > 0 {
		i -= len(m.Evidence)
		copy(dAtA[i:], m.Evidence)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.Evidence)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Reason) > 0 {
		i -= len(m.Reason)
		copy(dAtA[i:], m.Reason)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.Reason)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Reporter) > 0 {
		i -= len(m.Reporter)
		copy(dAtA[i:], m.Reporter)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.Reporter)))
		i--
		dAtA[i] = 0x1a
	}
	if m.PostId != 0 {
		i = encodeVarintContentReport(dAtA, i, uint64(m.PostId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintContentReport(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintContentReport(dAtA []byte, offset int, v uint64) int {
	offset -= sovContentReport(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ContentReport) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	if m.PostId != 0 {
		n += 1 + sovContentReport(uint64(m.PostId))
	}
	l = len(m.Reporter)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	l = len(m.Reason)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	l = len(m.Evidence)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	l = len(m.Status)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	l = len(m.CommunityResponse)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	l = len(m.Resolution)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovContentReport(uint64(l))
	}
	return n
}

func sovContentReport(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozContentReport(x uint64) (n int) {
	return sovContentReport(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ContentReport) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowContentReport
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContentReport: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContentReport: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostId", wireType)
			}
			m.PostId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PostId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reporter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reporter = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Evidence", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Evidence = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Status = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommunityResponse", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommunityResponse = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resolution", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Resolution = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthContentReport
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthContentReport
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipContentReport(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthContentReport
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipContentReport(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowContentReport
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowContentReport
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthContentReport
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupContentReport
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthContentReport
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthContentReport        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowContentReport          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupContentReport = fmt.Errorf("proto: unexpected end of group")
)
