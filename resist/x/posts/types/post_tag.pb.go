// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: resist/posts/v1/post_tag.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// PostTag defines the PostTag message.
type PostTag struct {
	Index           string `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	PostIndex       string `protobuf:"bytes,2,opt,name=post_index,json=postIndex,proto3" json:"post_index,omitempty"`
	Tag             string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Category        string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	SimilarityScore int64  `protobuf:"varint,5,opt,name=similarity_score,json=similarityScore,proto3" json:"similarity_score,omitempty"`
	RelatedPosts    string `protobuf:"bytes,6,opt,name=related_posts,json=relatedPosts,proto3" json:"related_posts,omitempty"`
	Creator         string `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *PostTag) Reset()         { *m = PostTag{} }
func (m *PostTag) String() string { return proto.CompactTextString(m) }
func (*PostTag) ProtoMessage()    {}
func (*PostTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_d2343ccf18561639, []int{0}
}
func (m *PostTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PostTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PostTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PostTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostTag.Merge(m, src)
}
func (m *PostTag) XXX_Size() int {
	return m.Size()
}
func (m *PostTag) XXX_DiscardUnknown() {
	xxx_messageInfo_PostTag.DiscardUnknown(m)
}

var xxx_messageInfo_PostTag proto.InternalMessageInfo

func (m *PostTag) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *PostTag) GetPostIndex() string {
	if m != nil {
		return m.PostIndex
	}
	return ""
}

func (m *PostTag) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *PostTag) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *PostTag) GetSimilarityScore() int64 {
	if m != nil {
		return m.SimilarityScore
	}
	return 0
}

func (m *PostTag) GetRelatedPosts() string {
	if m != nil {
		return m.RelatedPosts
	}
	return ""
}

func (m *PostTag) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*PostTag)(nil), "resist.posts.v1.PostTag")
}

func init() { proto.RegisterFile("resist/posts/v1/post_tag.proto", fileDescriptor_d2343ccf18561639) }

var fileDescriptor_d2343ccf18561639 = []byte{
	// 253 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xb3, 0xc6, 0x36, 0x76, 0x50, 0x5a, 0x96, 0x1e, 0x16, 0xc1, 0xa5, 0xe8, 0xa5, 0x5e,
	0x52, 0x8a, 0x6f, 0xe0, 0xcd, 0x9b, 0x54, 0x4f, 0x5e, 0xc2, 0x9a, 0x2e, 0x61, 0xa1, 0xba, 0x61,
	0x67, 0x28, 0xcd, 0x5b, 0xf8, 0x58, 0x1e, 0x73, 0x12, 0x8f, 0x92, 0xbc, 0x88, 0x64, 0x12, 0xed,
	0x6d, 0xfe, 0xef, 0x83, 0xe1, 0xe7, 0x07, 0x1d, 0x2c, 0x3a, 0xa4, 0x55, 0xe9, 0x91, 0x70, 0xb5,
	0x5f, 0xf3, 0x91, 0x91, 0x29, 0xd2, 0x32, 0x78, 0xf2, 0x72, 0xda, 0xfb, 0x94, 0x7d, 0xba, 0x5f,
	0x5f, 0x7f, 0x09, 0x48, 0x1e, 0x3d, 0xd2, 0xb3, 0x29, 0xe4, 0x1c, 0x46, 0xee, 0x7d, 0x6b, 0x0f,
	0x4a, 0x2c, 0xc4, 0x72, 0xb2, 0xe9, 0x83, 0xbc, 0x02, 0xe0, 0x27, 0xbd, 0x3a, 0x61, 0x35, 0xe9,
	0xc8, 0x03, 0xeb, 0x19, 0xc4, 0x64, 0x0a, 0x15, 0x33, 0xef, 0x4e, 0x79, 0x09, 0x67, 0xb9, 0x21,
	0x5b, 0xf8, 0x50, 0xa9, 0x53, 0xc6, 0xff, 0x59, 0xde, 0xc2, 0x0c, 0xdd, 0x9b, 0xdb, 0x99, 0xe0,
	0xa8, 0xca, 0x30, 0xf7, 0xc1, 0xaa, 0xd1, 0x42, 0x2c, 0xe3, 0xcd, 0xf4, 0xc8, 0x9f, 0x3a, 0x2c,
	0x6f, 0xe0, 0x22, 0xd8, 0x9d, 0x21, 0xbb, 0xcd, 0xb8, 0xad, 0x1a, 0xf3, 0xaf, 0xf3, 0x01, 0x76,
	0xa5, 0x51, 0x2a, 0x48, 0xf2, 0x60, 0x0d, 0xf9, 0xa0, 0x12, 0xd6, 0x7f, 0xf1, 0x3e, 0xfd, 0x6c,
	0xb4, 0xa8, 0x1b, 0x2d, 0x7e, 0x1a, 0x2d, 0x3e, 0x5a, 0x1d, 0xd5, 0xad, 0x8e, 0xbe, 0x5b, 0x1d,
	0xbd, 0xcc, 0x87, 0x8d, 0x0e, 0xc3, 0x4a, 0x54, 0x95, 0x16, 0x5f, 0xc7, 0x3c, 0xd0, 0xdd, 0x6f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x21, 0x15, 0x1c, 0x42, 0x01, 0x00, 0x00,
}

func (m *PostTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PostTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PostTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintPostTag(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.RelatedPosts) > 0 {
		i -= len(m.RelatedPosts)
		copy(dAtA[i:], m.RelatedPosts)
		i = encodeVarintPostTag(dAtA, i, uint64(len(m.RelatedPosts)))
		i--
		dAtA[i] = 0x32
	}
	if m.SimilarityScore != 0 {
		i = encodeVarintPostTag(dAtA, i, uint64(m.SimilarityScore))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Category) > 0 {
		i -= len(m.Category)
		copy(dAtA[i:], m.Category)
		i = encodeVarintPostTag(dAtA, i, uint64(len(m.Category)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Tag) > 0 {
		i -= len(m.Tag)
		copy(dAtA[i:], m.Tag)
		i = encodeVarintPostTag(dAtA, i, uint64(len(m.Tag)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PostIndex) > 0 {
		i -= len(m.PostIndex)
		copy(dAtA[i:], m.PostIndex)
		i = encodeVarintPostTag(dAtA, i, uint64(len(m.PostIndex)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintPostTag(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPostTag(dAtA []byte, offset int, v uint64) int {
	offset -= sovPostTag(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *PostTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovPostTag(uint64(l))
	}
	l = len(m.PostIndex)
	if l > 0 {
		n += 1 + l + sovPostTag(uint64(l))
	}
	l = len(m.Tag)
	if l > 0 {
		n += 1 + l + sovPostTag(uint64(l))
	}
	l = len(m.Category)
	if l > 0 {
		n += 1 + l + sovPostTag(uint64(l))
	}
	if m.SimilarityScore != 0 {
		n += 1 + sovPostTag(uint64(m.SimilarityScore))
	}
	l = len(m.RelatedPosts)
	if l > 0 {
		n += 1 + l + sovPostTag(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovPostTag(uint64(l))
	}
	return n
}

func sovPostTag(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPostTag(x uint64) (n int) {
	return sovPostTag(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *PostTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPostTag
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PostTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PostTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostTag
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PostIndex", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostTag
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PostIndex = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostTag
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Category", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostTag
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Category = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SimilarityScore", wireType)
			}
			m.SimilarityScore = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.SimilarityScore |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RelatedPosts", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostTag
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RelatedPosts = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPostTag
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPostTag
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPostTag(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPostTag
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPostTag(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPostTag
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPostTag
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPostTag
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPostTag
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPostTag
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPostTag        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPostTag          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPostTag = fmt.Errorf("proto: unexpected end of group")
)
