# Resist Blockchain Community Node Configuration
# Copy this file to .env and customize for your deployment
#
# Quick Start:
# 1. Set your NODE_MONIKER (node name)
# 2. Set your EXTERNAL_ADDRESS if you have a public IP/domain
# 3. Set NODE_OPERATOR (your name/organization)
# 4. Run: docker-compose up -d

# =============================================================================
# NODE IDENTITY & NETWORK
# =============================================================================

# Your node's name on the network (make it unique!)
NODE_MONIKER=my-community-node

# Your name or organization (for community recognition)
NODE_OPERATOR=CommunityNodeRunner

# Network configuration - connects to the main Resist network
CHAIN_ID=resist-mainnet-1
SEED_NODES=
PERSISTENT_PEERS=

# Connect to the main hub (replace with your actual hub address)
# When you deploy, this should point to your production node
HUB_ADDRESS=resist-hub.duckdns.org:26656

# Your external IP or domain (if you have one)
# Examples:
#   EXTERNAL_ADDRESS=tcp://your-domain.com:26656
#   EXTERNAL_ADDRESS=tcp://123.456.789.101:26656
EXTERNAL_ADDRESS=

# Minimum gas prices for transactions
MIN_GAS_PRICES=0.025stake

# =============================================================================
# PORT CONFIGURATION
# =============================================================================

# Blockchain ports - only change if you have conflicts
NODE_P2P_PORT=26656        # P2P connections from other nodes
NODE_RPC_PORT=26657        # RPC API access
NODE_API_PORT=1317         # REST API access
NODE_GRPC_PORT=9090        # gRPC access

# IPFS ports - for content distribution
IPFS_SWARM_PORT=4001       # IPFS peer connections
IPFS_API_PORT=5001         # IPFS API access
IPFS_GATEWAY_PORT=8080     # IPFS web gateway

# Optional services ports
API_GATEWAY_PORT=3000      # Community API gateway
MONITOR_PORT=9091          # Prometheus monitoring

# =============================================================================
# RESOURCE LIMITS
# =============================================================================

# Memory limits per service (adjust based on your server)
NODE_MEMORY_LIMIT=4g       # Blockchain node memory
IPFS_MEMORY_LIMIT=2g       # IPFS memory
API_MEMORY_LIMIT=1g        # API gateway memory
MONITOR_MEMORY_LIMIT=512m  # Monitoring memory

# CPU limits (number of cores to use)
NODE_CPU_LIMIT=2           # Blockchain node CPUs
IPFS_CPU_LIMIT=1           # IPFS CPUs

# =============================================================================
# VALIDATOR CONFIGURATION (Advanced Users)
# =============================================================================

# Set to true if you want to become a validator (requires staking)
VALIDATOR_MODE=false

# If VALIDATOR_MODE=true, you'll need to:
# 1. Generate validator keys
# 2. Stake tokens
# 3. Configure commission rates
# See validator-setup.md for full instructions

# =============================================================================
# BACKUP & MONITORING
# =============================================================================

# How many days to keep backups
BACKUP_RETENTION_DAYS=7

# Optional: Endpoint to report node statistics
# RESIST_BACKUP_ENDPOINT=https://stats.resist-blockchain.org/backup-status

# =============================================================================
# NETWORK INTEGRATION (Advanced)
# =============================================================================

# IPFS network integration
RESIST_HUB_IP=your-hub-ip-here
RESIST_HUB_PEER_ID=hub-peer-id-here

# =============================================================================
# TROUBLESHOOTING COMMON ISSUES
# =============================================================================

# If you get "port already in use" errors:
# 1. Change the port numbers above to unused ports
# 2. Update your router port forwarding accordingly

# If your node can't sync:
# 1. Check your firewall allows the ports above
# 2. Verify EXTERNAL_ADDRESS is correct
# 3. Check logs: docker-compose logs -f resist-community-node

# If IPFS won't start:
# 1. Make sure IPFS_SWARM_PORT is not used by another service
# 2. Check if Docker has enough disk space

# For more help, visit:
# https://docs.resist-blockchain.org/community-nodes